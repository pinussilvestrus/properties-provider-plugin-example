{"version":3,"file":"client.js","sources":["webpack://properties-provider-plugin-example/./client/bpmn-js-extension/PropertiesProvider.js","webpack://properties-provider-plugin-example/./client/bpmn-js-extension/index.js","webpack://properties-provider-plugin-example/./node_modules/camunda-modeler-plugin-helpers/index.js","webpack://properties-provider-plugin-example/webpack/bootstrap","webpack://properties-provider-plugin-example/webpack/runtime/define property getters","webpack://properties-provider-plugin-example/webpack/runtime/hasOwnProperty shorthand","webpack://properties-provider-plugin-example/webpack/runtime/make namespace object","webpack://properties-provider-plugin-example/./client/index.js"],"sourcesContent":["/**\n * A bpmn-js plugin which extends the existing Camunda Properties Provider\n * by removing one tab.\n *\n */\nexport default class PropertiesProvider {\n\n  constructor(propertiesPanel) {\n    propertiesPanel.registerProvider(500, this);\n\n  }\n\n  getTabs(element) {\n    return function(tabs) {\n      \n      // remove Input/Output tab\n      const idx = tabs.findIndex(t => t.id === 'input-output');\n\n      tabs.splice(idx, 1);\n\n      return tabs;\n    }\n  }\n}\n\nPropertiesProvider.$inject = [\n  'propertiesPanel'\n];","import PropertiesProvider from './PropertiesProvider';\n\nexport default {\n  __init__: [ 'myPropertiesProvider' ],\n  myPropertiesProvider: [ 'type', PropertiesProvider ]\n};\n","/**\r\n * Validate and register a client plugin.\r\n *\r\n * @param {Object} plugin\r\n * @param {String} type\r\n */\r\nexport function registerClientPlugin(plugin, type) {\r\n  var plugins = window.plugins || [];\r\n  window.plugins = plugins;\r\n\r\n  if (!plugin) {\r\n    throw new Error('plugin not specified');\r\n  }\r\n\r\n  if (!type) {\r\n    throw new Error('type not specified');\r\n  }\r\n\r\n  plugins.push({\r\n    plugin: plugin,\r\n    type: type\r\n  });\r\n}\r\n\r\n/**\r\n * Validate and register a bpmn-js plugin.\r\n *\r\n * @param {Object} module\r\n *\r\n * @example\r\n *\r\n * import {\r\n *   registerBpmnJSPlugin\r\n * } from 'camunda-modeler-plugin-helpers';\r\n *\r\n * const BpmnJSModule = {\r\n *   __init__: [ 'myService' ],\r\n *   myService: [ 'type', ... ]\r\n * };\r\n *\r\n * registerBpmnJSPlugin(BpmnJSModule);\r\n */\r\nexport function registerBpmnJSPlugin(module) {\r\n  registerClientPlugin(module, 'bpmn.modeler.additionalModules');\r\n}\r\n\r\n/**\r\n * Validate and register a bpmn-moddle extension plugin.\r\n *\r\n * @param {Object} descriptor\r\n *\r\n * @example\r\n * import {\r\n *   registerBpmnJSModdleExtension\r\n * } from 'camunda-modeler-plugin-helpers';\r\n *\r\n * var moddleDescriptor = {\r\n *   name: 'my descriptor',\r\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\r\n *   prefix: 'mydesc',\r\n *\r\n *   ...\r\n * };\r\n *\r\n * registerBpmnJSModdleExtension(moddleDescriptor);\r\n */\r\nexport function registerBpmnJSModdleExtension(descriptor) {\r\n  registerClientPlugin(descriptor, 'bpmn.modeler.moddleExtension');\r\n}\r\n\r\n/**\r\n * Return the modeler directory, as a string.\r\n *\r\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\r\n *\r\n * @return {String}\r\n */\r\nexport function getModelerDirectory() {\r\n  return window.getModelerDirectory();\r\n}\r\n\r\n/**\r\n * Return the modeler plugin directory, as a string.\r\n *\r\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\r\n *\r\n * @return {String}\r\n */\r\nexport function getPluginsDirectory() {\r\n  return window.getPluginsDirectory();\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\r\n  registerBpmnJSPlugin\r\n} from 'camunda-modeler-plugin-helpers';\r\n\r\nimport BpmnExtensionModule from './bpmn-js-extension';\r\n\r\nregisterBpmnJSPlugin(BpmnExtensionModule);\r\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}